{
  "name": "@david-osipov/security-kit",
  "version": "0.7.1",
  "description": "An opinionated, zero-dependency security toolkit for modern browsers. Implements a verifiable Zero Trust security model in TypeScript, built on the native Web Crypto API.",
  "author": "David Osipov <personal@david-osipov.vision>",
  "license": "MIT",
  "homepage": "https://github.com/david-osipov/Security-Kit#readme",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/david-osipov/Security-Kit.git"
  },
  "bugs": {
    "url": "https://github.com/david-osipov/Security-Kit/issues"
  },
  "keywords": [
    "security",
    "crypto",
    "webcrypto",
    "zerotrust",
    "hardening",
    "secure",
    "nanoid",
    "uuid",
    "sri",
    "postmessage",
    "typescript",
    "constant-time",
    "csp",
    "owasp"
  ],
  "type": "module",
  "sideEffects": false,
  "engines": {
    "node": ">=18.18.0"
  },
  "main": "./dist/index.cjs",
  "module": "./dist/index.mjs",
  "types": "./dist/index.d.ts",
  "exports": {
    ".": {
      "types": "./dist/index.d.ts",
      "import": "./dist/index.mjs",
      "require": "./dist/index.cjs"
    },
    "./test-internals": {
      "types": "./dist/test-internals.d.ts",
      "import": "./dist/test-internals.mjs",
      "require": "./dist/test-internals.cjs"
    }
  },
  "files": [
    "dist",
    "sbom.json",
    "docs/Security Constitution.md",
    "README.md",
    "LICENSE"
  ],
  "publishConfig": {
    "access": "public"
  },
  "scripts": {
    "build": "tsup --config tsup.config.ts",
    "test": "vitest run",
    "test:watch": "vitest",
    "test:unit": "vitest run --include '**/unit/**'",
    "test:integration": "vitest run --include '**/integration/**'",
    "test:security": "npm run build && vitest run --include '**/security/**' --silent",
    "test:a11y": "vitest run --include '**/a11y/**'",
    "test:seo": "vitest run --include '**/seo/**'",
    "test:i18n": "vitest run --include '**/i18n/**'",
    "coverage": "vitest run --coverage",
    "lint": "eslint 'src/**/*.{ts,tsx}' --max-warnings=0",
    "lint:fix": "eslint 'src/**/*.{ts,tsx}' --fix",
    "lint:ci": "HUSKY=0 eslint 'src/**/*.{ts,tsx}' --max-warnings=0",
    "gitleaks": "gitleaks detect --source . --config .gitleaks.toml --verbose || true",
    "gitleaks:ci": "gitleaks detect --source . --config .gitleaks.toml --exit-code 1",
    "knip": "knip",
    "ci:knip": "knip --fail-on high",
    "format:check": "prettier --check \"**/*.{ts,tsx,js,jsx,json,md}\"",
    "format": "prettier --write \"**/*.{ts,tsx,js,jsx,json,md}\"",
    "eslint:fix": "eslint . --fix",
    "typecheck": "tsc --noEmit",
    "verify:sanitize": "node scripts/verify-sanitize.cjs",
    "generate:sbom": "npx ts-node --transpile-only scripts/generate-sbom.ts",
    "pack:check": "npm pack --dry-run",
    "prepare": "node -r ts-node/register .husky/install.ts",
    "prepare:full": "npm run typecheck && npm run lint && npm run test && npm run verify:sanitize && npm run build && npm run generate:sbom",
    "prepublishOnly": "npm run prepare",
    "guard:no-blob-fallback": "NODE_NO_WARNINGS=1 npx ts-node-esm ./scripts/ci-guard-no-blob-fallback.ts",
    "ci:check": "npm run guard:no-blob-fallback && npm run typecheck && npm run lint:ci && npm run test && npm run ci:knip",
    "check:secrets": "NODE_OPTIONS=--no-warnings npx ts-node-esm ./tools/check-short-secrets.ts",
    "fuzz:standalone": "npm run build && node -e \"(async function(){const m=await import('./dist/index.mjs');const it=Number(process.env.RUN_FUZZ_ITERATIONS||'100');if(typeof m.runStandaloneFuzzHarness==='function'){const code=await m.runStandaloneFuzzHarness(it);process.exit(code||0);}else{console.error('runStandaloneFuzzHarness not exported');process.exit(1);}})()\""
  },
  "peerDependencies": {
    "dompurify": "^3.2.0"
  },
  "optionalDependencies": {
    "css-what": "^7.0.0",
    "fast-sha256": "^1.3.0",
    "hash-wasm": "^4.12.0",
    "lru-cache": "^11.1.0"
  },
  "devDependencies": {
    "@djankies/vitest-mcp": "^0.5.1",
    "@types/eslint-plugin-security": "^3.0.0",
    "@types/node": "^24.3.0",
    "@typescript-eslint/eslint-plugin": "^8.41.0",
    "@typescript-eslint/parser": "^8.41.0",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/eslint-plugin": "^1.3.6",
    "eslint": "^9.34.0",
    "eslint-import-resolver-typescript": "^4.4.4",
    "eslint-plugin-astro": "^1.3.1",
    "eslint-plugin-functional": "^9.0.2",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-n": "^17.21.3",
    "eslint-plugin-no-unsanitized": "^4.1.2",
    "eslint-plugin-prettier": "^5.5.4",
    "eslint-plugin-regexp": "^2.10.0",
    "eslint-plugin-security": "^3.0.1",
    "eslint-plugin-security-node": "^1.1.4",
    "eslint-plugin-sonarjs": "^3.0.5",
    "eslint-plugin-unicorn": "^60.0.0",
    "fast-check": "^4.3.0",
    "husky": "^9.1.7",
    "isomorphic-dompurify": "^2.26.0",
    "jsdom": "^26.1.0",
    "knip": "^5.63.0",
    "lint-staged": "^16.1.5",
    "prettier": "^3.6.2",
    "snyk": "^1.1298.3",
    "ts-node": "^10.9.2",
    "tsup": "^8.5.0",
    "typescript": "^5.9.2",
    "vitest": "^3.2.4"
  },
  "lint-staged": {
    "**/*.{ts,tsx}": [
      "eslint --fix"
    ]
  },
  "bundleDependencies": []
}
