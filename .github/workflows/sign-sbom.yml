# SPDX-License-Identifier: LGPL-3.0-or-later
# SPDX-FileCopyrightText: Â© 2025 David Osipov <personal@david-osipov.vision>
name: Sign SBOM

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag to sign (e.g., v1.0.0)'
        required: false
        type: string
  release:
    types: [published]

permissions:
  contents: write
  id-token: write

jobs:
  sign:
    runs-on: ubuntu-latest
    steps:
      - name: Determine release tag
        id: vars
        run: |
          TAG=${{ github.event.inputs.release_tag || github.ref_name }}
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Checkout release
        uses: actions/checkout@v5
        with:
          ref: ${{ steps.vars.outputs.tag }}

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3

      - name: Ensure SBOM exists
        run: |
          if [ ! -f sbom.json ]; then
            echo "sbom.json not found; generating locally"
            npm ci
            npm run build
            npm run generate:sbom -- --provenance-commit "$GITHUB_SHA" --provenance-run-url "$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" --provenance-run-id "$GITHUB_RUN_ID" --provenance-builder "$GITHUB_ACTOR" --tool-version "1.0.0"
          fi

      - name: Keyless cosign sign sbom.json
        env:
          COSIGN_EXPERIMENTAL: 1
        run: |
          cosign sign-blob --yes --output-signature sbom.json.sig --output-certificate sbom.json.pem sbom.json

      - name: Upload signature and certificate to release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload "${{ steps.vars.outputs.tag }}" sbom.json.sig sbom.json.pem --clobber || true
